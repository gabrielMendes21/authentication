import { AuthContext } from '@/contexts/AuthContext'

import Head from 'next/head'
import { useForm } from 'react-hook-form'
import Link from 'next/link'
import { useContext, useState } from 'react'
import { Fade } from 'react-reveal'

export default function Login() {
  const [ button, setButton ] = useState("Sign in")
  const { register, handleSubmit, formState: { errors } } = useForm()
  const { signIn } = useContext(AuthContext)

  async function handleSignIn(data) {
    try {
      setButton("Signing in...")
      await signIn(data)
    } catch(err) {
      console.log(err)
    } finally {
      setButton("Sign in")
    }
  }

  return (
      <Fade bottom>
        <Head>
          <title>Auth</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <h1 className="font-medium text-4xl mb-10">Sign in to your account</h1>
          <div className="bg-zinc-300 rounded-md p-5">
            <form className="flex flex-col gap-2" onSubmit={handleSubmit(handleSignIn)}>
              <label htmlFor='email'>Email</label>
              <input 
                {...register("email", { required: true })} 
                id="email" 
                name="email" 
                className="p-1 rounded-md" 
              />
              {
                errors.email?.type === "required" && 
                <Fade>
                  <p role="alert" className="text-red-500 font-medium text-sm">Email is required</p>
                </Fade>
              }

              <label htmlFor="password">Password</label>
              <input 
                type="password" 
                {...register("password", { required: true })} 
                id="password" 
                name="password" 
                className="p-1 rounded-md" 
              />
              {
                errors.password?.type === "required" && 
                <Fade>
                  <p role="alert" className="text-red-500 font-medium text-sm">Password is required</p>
                </Fade>
              }

              <button 
                className="bg-cyan-600 rounded-md py-2 mt-5"
              >
                {button}
              </button>
            </form>
            <Link href="./createNewAccount" className="block mt-4 text-blue-500">Create a new account</Link>
          </div>
        </main>
      </Fade>
  )
}